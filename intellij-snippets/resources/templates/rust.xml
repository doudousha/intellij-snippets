<templateSet group="rust">
  <template description="" name="fn &quot;Function definition&quot;" toReformat="true" toShortenFQNames="true" value="fn $1$($2$)$3$ {$END$}">
    <variable alwaysStopAt="true" defaultValue="&quot;function_name&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="pfn &quot;Function definition&quot;" toReformat="true" toShortenFQNames="true" value="pub fn $1$($2$)$3$ {$END$}">
    <variable alwaysStopAt="true" defaultValue="&quot;function_name&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="test &quot;Unit test function&quot;" toReformat="true" toShortenFQNames="true" value="#[test]fn $1$() {$END$}">
    <variable alwaysStopAt="true" defaultValue="&quot;test_function_name&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="bench &quot;Bench function&quot; b" toReformat="true" toShortenFQNames="true" value="#[bench]fn $1$(b: &amp;mut test::Bencher) {b.iter(|| {$END$})}">
    <variable alwaysStopAt="true" defaultValue="&quot;bench_function_name&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="new &quot;Constructor function&quot;" toReformat="true" toShortenFQNames="true" value="pub fn new($2$) -&gt; $1$ {$1 { $3$ }}">
    <variable alwaysStopAt="true" defaultValue="&quot;Name&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="main &quot;Main function&quot;" toReformat="true" toShortenFQNames="true" value="pub fn main() {$END$}">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="let &quot;let variable declaration with type inference&quot;" toReformat="true" toShortenFQNames="true" value="let $1$  = $2$;">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="lett &quot;let variable declaration with explicit type annotation&quot;" toReformat="true" toShortenFQNames="true" value="let $1$: $2$  = $3$;">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="letm &quot;let mut variable declaration with type inference&quot;" toReformat="true" toShortenFQNames="true" value="let mut $1$  = $2$;">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="lettm &quot;let mut variable declaration with explicit type annotation&quot;" toReformat="true" toShortenFQNames="true" value="let mut $1$: $2$  = $3$;">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="pln &quot;println!&quot;" toReformat="true" toShortenFQNames="true" value="println!(&quot;$1$&quot;);">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="pln, &quot;println! with format param&quot;" toReformat="true" toShortenFQNames="true" value="println!(&quot;$1$&quot;, $2$);">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="ec &quot;extern crate&quot;" toReformat="true" toShortenFQNames="true" value="extern crate $1$;">
    <variable alwaysStopAt="true" defaultValue="&quot;sync&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="ecl &quot;extern crate log&quot;" toReformat="true" toShortenFQNames="true" value="#[macro_use]extern crate log;">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="mod" toReformat="true" toShortenFQNames="true" value="mod $1$ {$END$} /* $1 */">
    <variable alwaysStopAt="true" defaultValue="&quot;`substitute(vim_snippets#Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="testmod &quot;Test module&quot; b" toReformat="true" toShortenFQNames="true" value="#[cfg(test)]mod tests {use super::$1$;test$END$}">
    <variable alwaysStopAt="true" defaultValue="&quot;*&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="allow &quot;allow lint attribute&quot; b" toReformat="true" toShortenFQNames="true" value="#[allow($1$)]">
    <variable alwaysStopAt="true" defaultValue="&quot;unused_variable&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="cfg &quot;cfg attribute&quot; b" toReformat="true" toShortenFQNames="true" value="#[cfg($1$)]">
    <variable alwaysStopAt="true" defaultValue="&quot;target_os = &quot;linux&quot;&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="feat &quot;feature attribute&quot; b" toReformat="true" toShortenFQNames="true" value="#![feature($1$)]">
    <variable alwaysStopAt="true" defaultValue="&quot;plugin&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="der &quot;#[derive(..)]&quot; b" toReformat="true" toShortenFQNames="true" value="#[derive($1$)]">
    <variable alwaysStopAt="true" defaultValue="&quot;Debug&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="attr &quot;#[..]&quot; b" toReformat="true" toShortenFQNames="true" value="#[$1$]">
    <variable alwaysStopAt="true" defaultValue="&quot;inline&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="crate &quot;Define create meta attributes&quot;" toReformat="true" toShortenFQNames="true" value="// Crate name#![crate_name = &quot;$1$&quot;]// Additional metadata attributes#![desc = &quot;$2$&quot;]#![license = &quot;$3$&quot;]#![comment = &quot;$4$&quot;]// Specify the output type#![crate_type = &quot;$5$&quot;]">
    <variable alwaysStopAt="true" defaultValue="&quot;crate_name&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;Descrption.&quot;" expression="" name="2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;BSD&quot;" expression="" name="3"/>
    <variable alwaysStopAt="true" defaultValue="&quot;Comment.&quot;" expression="" name="4"/>
    <variable alwaysStopAt="true" defaultValue="&quot;lib&quot;" expression="" name="5"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="opt &quot;Option&lt;T&gt;&quot;" toReformat="true" toShortenFQNames="true" value="Option&lt;$1$&gt;">
    <variable alwaysStopAt="true" defaultValue="&quot;i32&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="res &quot;Result&lt;T, E&gt;&quot;" toReformat="true" toShortenFQNames="true" value="Result&lt;$1$, $2$&gt;">
    <variable alwaysStopAt="true" defaultValue="&quot;~str&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;()&quot;" expression="" name="2"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="if" toReformat="true" toShortenFQNames="true" value="if $1$ {$END$}">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="ife &quot;if / else&quot;" toReformat="true" toShortenFQNames="true" value="if $1$ {$2$} else {$END$}">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="el &quot;else&quot;" toReformat="true" toShortenFQNames="true" value="else {$END$}">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="eli &quot;else if&quot;" toReformat="true" toShortenFQNames="true" value="else if $1$ {$END$}">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="mat &quot;match pattern&quot;" toReformat="true" toShortenFQNames="true" value="match $1$ {$2$ =&gt; $3$}">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="case &quot;Case clause of pattern match&quot;" toReformat="true" toShortenFQNames="true" value="$1$ =&gt; $2$">
    <variable alwaysStopAt="true" defaultValue="&quot;_&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;expression&quot;" expression="" name="2"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="loop &quot;loop {}&quot; b" toReformat="true" toShortenFQNames="true" value="loop {$END$}">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="wh &quot;while loop&quot;" toReformat="true" toShortenFQNames="true" value="while $1$ {$END$}">
    <variable alwaysStopAt="true" defaultValue="&quot;condition&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="for &quot;for ... in ... loop&quot;" toReformat="true" toShortenFQNames="true" value="for $1$ in $2$ {$END$}">
    <variable alwaysStopAt="true" defaultValue="&quot;i&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="todo &quot;TODO comment&quot;" toReformat="true" toShortenFQNames="true" value="// [TODO]: $END$">
    <variable alwaysStopAt="true" defaultValue="&quot;Description&quot;" expression="" name="0"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="fixme &quot;FIXME comment&quot;" toReformat="true" toShortenFQNames="true" value="// FIXME: $0">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="st &quot;Struct definition&quot;" toReformat="true" toShortenFQNames="true" value="struct $1$ {$END$}">
    <variable alwaysStopAt="true" defaultValue="&quot;`substitute(vim_snippets#Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="impl &quot;Struct/Trait implementation&quot;" toReformat="true" toShortenFQNames="true" value="impl $1$$2$} {$END$}">
    <variable alwaysStopAt="true" defaultValue="&quot;Type/Trait&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot; for ${3:Type&quot;" expression="" name="2"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="stn &quot;Struct with new constructor&quot;" toReformat="true" toShortenFQNames="true" value="pub struct $1$ {$END$}impl $1 {pub fn new($2$) -&gt; $1 {$1 { $3$ }}}">
    <variable alwaysStopAt="true" defaultValue="&quot;`substitute(vim_snippets#Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="type &quot;Type alias&quot;" toReformat="true" toShortenFQNames="true" value="type $1$ = $2;">
    <variable alwaysStopAt="true" defaultValue="&quot;NewName&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="enum &quot;enum definition&quot;" toReformat="true" toShortenFQNames="true" value="enum $1$ {$2$,}">
    <variable alwaysStopAt="true" defaultValue="&quot;Name&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="trait &quot;Trait definition&quot;" toReformat="true" toShortenFQNames="true" value="trait $1$ {$END$}">
    <variable alwaysStopAt="true" defaultValue="&quot;Name&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="drop &quot;Drop trait implementation (destructor)&quot;" toReformat="true" toShortenFQNames="true" value="impl Drop for $1$ {fn drop(&amp;mut self) {$END$}}">
    <variable alwaysStopAt="true" defaultValue="&quot;Name&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="ss &quot;static string declaration&quot;" toReformat="true" toShortenFQNames="true" value="static $1$: &amp;'static str = &quot;$END$&quot;;">
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="stat &quot;static item declaration&quot;" toReformat="true" toShortenFQNames="true" value="static $1$: $2$ = $END$;">
    <variable alwaysStopAt="true" defaultValue="&quot;usize&quot;" expression="" name="2"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="scoped &quot;spawn a scoped thread&quot;" toReformat="true" toShortenFQNames="true" value="thread::scoped($1$|| {$END$});">
    <variable alwaysStopAt="true" defaultValue="&quot;move &quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="spawn &quot;spawn a thread&quot;" toReformat="true" toShortenFQNames="true" value="thread::spawn($1$|| {$END$});">
    <variable alwaysStopAt="true" defaultValue="&quot;move &quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="chan &quot;Declare (Sender, Receiver) pair of asynchronous channel()&quot;" toReformat="true" toShortenFQNames="true" value="let ($1$, $2$): (Sender&lt;$3$&gt;, Receiver&lt;$4$&gt;) = channel();">
    <variable alwaysStopAt="true" defaultValue="&quot;tx&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;rx&quot;" expression="" name="2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;i32&quot;" expression="" name="3"/>
    <variable alwaysStopAt="true" defaultValue="&quot;i32&quot;" expression="" name="4"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
  <template description="" name="as &quot;assert!&quot;" toReformat="true" toShortenFQNames="true" value="assert!($1$)">
    <variable alwaysStopAt="true" defaultValue="&quot;predicate&quot;" expression="" name="1"/>
    <context>
      <option name="RUST" value="true"/>
    </context>
  </template>
</templateSet>
