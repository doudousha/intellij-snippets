<templateSet group="scala">
  <template description="" name="sl-if" toReformat="false" toShortenFQNames="true" value="    if ($var1$)&#10;        $END$&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-ifn" toReformat="false" toShortenFQNames="true" value="    if (!$var1$)&#10;        $END$&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-ife" toReformat="false" toShortenFQNames="true" value="    if ($var1$)&#10;        $var2$&#10;    else&#10;        $END$&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-ifelif" toReformat="false" toShortenFQNames="true" value="    if ($var1$)&#10;        $var2$&#10;    else if ($var3$)&#10;        $END$&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-eif" toReformat="false" toShortenFQNames="true" value="    else if ($var3$)&#10;        $END$&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-wh" toReformat="false" toShortenFQNames="true" value="    while ($var1$) {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;obj&quot;" expression="" name="var1"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-for" toReformat="false" toShortenFQNames="true" value="    for ($var1$ &lt;- $var2$) {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;item&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;obj&quot;" expression="" name="var2"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-fori" toReformat="false" toShortenFQNames="true" value="    for ($var1$ &lt;- $var2$ to $var3$.length) {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;i&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;0&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;obj&quot;" expression="" name="var3"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-fory" toReformat="false" toShortenFQNames="true" value="    for {&#10;        $var1$ &lt;- $var2$&#10;    } yield $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;item&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;obj&quot;" expression="" name="var2"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-try" toReformat="false" toShortenFQNames="true" value="    try {&#10;        $var1$&#10;    } catch {&#10;        case e: FileNotFoundException =&gt; $var2$&#10;        case e: IOException =&gt; $var3$&#10;    } finally {&#10;        $END$&#10;    }&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-match" toReformat="false" toShortenFQNames="true" value="    $var1$ match {&#10;        case $var2$ =&gt; $var3$&#10;        case _ =&gt; $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot; obj&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;e&quot;" expression="" name="var2"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-case" toReformat="false" toShortenFQNames="true" value="    case $var1$ =&gt; $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;value&quot;" expression="" name="var1"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-arg" toReformat="false" toShortenFQNames="true" value="    $var1$: $var2$$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;a&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;, arg&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-args" toReformat="false" toShortenFQNames="true" value="    $var1$: $END$*&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;args&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-def" toReformat="false" toShortenFQNames="true" value="    def $var1$($var2$) = $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;arg&quot;" expression="" name="var2"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-prdef" toReformat="false" toShortenFQNames="true" value="    private def $var1$($var2$) = $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;arg&quot;" expression="" name="var2"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-ovdef" toReformat="false" toShortenFQNames="true" value="    override def $var1$($var2$) = $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;arg&quot;" expression="" name="var2"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-fcf" toReformat="false" toShortenFQNames="true" value="    ($var1$: $var2$) =&gt; $var1$ $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;a&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var2"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-=&gt;" toReformat="false" toShortenFQNames="true" value="    $var1$ =&gt; $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-rec" toReformat="false" toShortenFQNames="true" value="    def $var1$($END$) =&#10;        if($var2$) $var2$&#10;        else $var1$($var2$)&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;arg&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-crdef" toReformat="false" toShortenFQNames="true" value="    def $var1$($var2$)($var3$) = $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;arg&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;arg&quot;" expression="" name="var3"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-main" toReformat="false" toShortenFQNames="true" value="    def main(args: Array[String]):$var1$ = $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var1"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    dbl&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    int&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    lng&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    chr&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    str&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    arr&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    buf&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    list&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    tpl&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    set&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    map&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    hset&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    hmap&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-T" toReformat="false" toShortenFQNames="true" value="    bool&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-bool" toReformat="false" toShortenFQNames="true" value="    Boolean&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-anyr" toReformat="false" toShortenFQNames="true" value="    AnyRef&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-dbl" toReformat="false" toShortenFQNames="true" value="    Double&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-int" toReformat="false" toShortenFQNames="true" value="    Int&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-str" toReformat="false" toShortenFQNames="true" value="    String&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-chr" toReformat="false" toShortenFQNames="true" value="    Char&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-lng" toReformat="false" toShortenFQNames="true" value="    Long&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-arr" toReformat="false" toShortenFQNames="true" value="    Array$var1$$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;[T]&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;()&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-buf" toReformat="false" toShortenFQNames="true" value="    Buffer$var1$$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;[T]&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;()&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-list" toReformat="false" toShortenFQNames="true" value="    List$var1$$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;[T]&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;()&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-tpl" toReformat="false" toShortenFQNames="true" value="    Tuple$var1$[$var2$,$END$]&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;2&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-set" toReformat="false" toShortenFQNames="true" value="    Set$var1$$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;[T]&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;()&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-hset" toReformat="false" toShortenFQNames="true" value="    HashSet$var1$$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;[T]&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;()&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-mhset" toReformat="false" toShortenFQNames="true" value="    mutable.HashSet$var1$$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;[T]&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;()&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-keyval" toReformat="false" toShortenFQNames="true" value="    $var1$-&gt;$var2$$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;key&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;val&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;, keyval&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-map" toReformat="false" toShortenFQNames="true" value="    Map[$var1$,$var2$]$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;(keyval)&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-hmap" toReformat="false" toShortenFQNames="true" value="    HashMap[$var1$,$var2$]$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;(keyval)&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-mmap" toReformat="false" toShortenFQNames="true" value="    mutable.Map[$var1$,$var2$]$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;(keyval)&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-mhmap" toReformat="false" toShortenFQNames="true" value="    mutable.HashMap[$var1$,$var2$]$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;(keyval)&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-as" toReformat="false" toShortenFQNames="true" value="    $var1$.asInstanceOf[$var2$]&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var2"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-is" toReformat="false" toShortenFQNames="true" value="    $var1$.isInstanceOf[$var2$]&#10;&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="var2"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-(a" toReformat="false" toShortenFQNames="true" value="    ($var1$ =&gt; $END$)&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;a&quot;" expression="" name="var1"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-{(" toReformat="false" toShortenFQNames="true" value="    {($var1$,$var2$) =&gt;&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;a&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;b&quot;" expression="" name="var2"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-filter" toReformat="false" toShortenFQNames="true" value="    $END$.filter (a&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-mapf" toReformat="false" toShortenFQNames="true" value="    $END$.map (a&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-flatmap" toReformat="false" toShortenFQNames="true" value="    $var1$.flatMap$END$(a&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;[T]&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-fldl" toReformat="false" toShortenFQNames="true" value="    $var1$.foldLeft($END$) {(&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;first&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-fldr" toReformat="false" toShortenFQNames="true" value="    $var1$.foldRight($END$) {(&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;first&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-/:" toReformat="false" toShortenFQNames="true" value="    ($var1$/:$var2$)($END$)&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;first&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var2"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-:\" toReformat="false" toShortenFQNames="true" value="    ($var1$:\$var2$)($END$)&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;first&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var2"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-redl" toReformat="false" toShortenFQNames="true" value="    $var1$.reduceLeft[$END$] {(&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-redr" toReformat="false" toShortenFQNames="true" value="    $var1$.reduceRight[$END$] {(&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;T&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-zipwi" toReformat="false" toShortenFQNames="true" value="    $END$.view.zipWithIndex&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-spl" toReformat="false" toShortenFQNames="true" value="    $var1$.split(&quot;$END$&quot;)&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;,&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-val" toReformat="false" toShortenFQNames="true" value="    val $var1$$var2$ = $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;: T&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;value&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-var" toReformat="false" toShortenFQNames="true" value="    var $var1$$var2$ = $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;: T&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;value&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-extends" toReformat="false" toShortenFQNames="true" value="    extends $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;what&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-with" toReformat="false" toShortenFQNames="true" value="    with $var1$$END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;what&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot; with&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-athis" toReformat="false" toShortenFQNames="true" value="    def this(arg) = this(arg)&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-abstract" toReformat="false" toShortenFQNames="true" value="    abstract class $var1$$var2$$var3$$var4$ {&#10;        $var5$&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;(arg)&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot; extends &quot;" expression="" name="var3"/>
    <variable alwaysStopAt="true" defaultValue="&quot; with&quot;" expression="" name="var4"/>
    <variable alwaysStopAt="true" defaultValue="&quot;override def toString = &quot;$1&quot;&quot;" expression="" name="var5"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-class" toReformat="false" toShortenFQNames="true" value="    class $var1$$var2$$var3$$var4$ {&#10;        $var5$&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;(arg)&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot; extends &quot;" expression="" name="var3"/>
    <variable alwaysStopAt="true" defaultValue="&quot; with&quot;" expression="" name="var4"/>
    <variable alwaysStopAt="true" defaultValue="&quot;override def toString = &quot;$1&quot;&quot;" expression="" name="var5"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-object" toReformat="false" toShortenFQNames="true" value="    object $var1$$var2$$var3$$var4$ $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;(arg)&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot; extends &quot;" expression="" name="var3"/>
    <variable alwaysStopAt="true" defaultValue="&quot; with&quot;" expression="" name="var4"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-trait" toReformat="false" toShortenFQNames="true" value="    trait $var1$$var2$$var3$ {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot; extends &quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot; with&quot;" expression="" name="var3"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-ordered" toReformat="false" toShortenFQNames="true" value="    class $var1$$var2$ extends Ordered[$var1$] $var3$ {&#10;        $var4$&#10;        def compare(that: $var1$) = $var5$&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;(arg)&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot; with&quot;" expression="" name="var3"/>
    <variable alwaysStopAt="true" defaultValue="&quot;override def toString = &quot;$1&quot;&quot;" expression="" name="var4"/>
    <variable alwaysStopAt="true" defaultValue="&quot;this - that&quot;" expression="" name="var5"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-casecl" toReformat="false" toShortenFQNames="true" value="    case class $var1$$var2$$var3$$var4$ $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;(arg)&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot; extends &quot;" expression="" name="var3"/>
    <variable alwaysStopAt="true" defaultValue="&quot; with&quot;" expression="" name="var4"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-scalatest" toReformat="false" toShortenFQNames="true" value="    $var1$&#10;    $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;import org.scalatest.Suite&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;import org.scalatest.FunSuite&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-assert" toReformat="false" toShortenFQNames="true" value="    assert($var1$ === $END$)&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;a&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;b&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-ensuring" toReformat="false" toShortenFQNames="true" value="    ifel ensuring($var1$==$END$)&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;a&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;b&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-expect" toReformat="false" toShortenFQNames="true" value="    expect($var1$) {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;what&quot;" expression="" name="var1"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-intercept" toReformat="false" toShortenFQNames="true" value="    intercept[$var1$] {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;IllegalArgumentException&quot;" expression="" name="var1"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-test" toReformat="false" toShortenFQNames="true" value="    test(&quot;$var1$&quot;) {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;description&quot;" expression="" name="var1"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-suite" toReformat="false" toShortenFQNames="true" value="    class $END$ extends Suite {&#10;        def test() {&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-fsuite" toReformat="false" toShortenFQNames="true" value="    class $var1$ extends FunSuite {&#10;        test(&quot;$END$&quot;) {&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;description&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-webproject" toReformat="false" toShortenFQNames="true" value="    import sbt._&#10;&#10;    class $var1$(info: ProjectInfo) extends DefaultWebProject(info) {&#10;        val liftVersion = &quot;$END$&quot;&#10;&#10;        override def libraryDependencies = Set(&#10;&#10;        ) ++ super.libraryDependencies&#10;&#10;        val snapshots = ScalaToolsSnapshots&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;Name&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;2.3&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-liftjar" toReformat="false" toShortenFQNames="true" value="    &quot;net.liftweb&quot; %% &quot;$END$&quot; % liftVersion % &quot;compile-&gt;default&quot;,&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;lib&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-jettyjar" toReformat="false" toShortenFQNames="true" value="    &quot;org.mortbay.jetty&quot; % &quot;jetty&quot; % &quot;$END$&quot; % &quot;test-&gt;default&quot;,&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;version&quot;" expression="" name="END"/>
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
  <template description="" name="sl-liftimports" toReformat="false" toShortenFQNames="true" value="    import _root_.net.liftweb.http._&#10;    import S._&#10;    import _root_.net.liftweb.util._&#10;    import Helpers._&#10;    import _root_.scala.xml._&#10;">
    <context>
      <option name="SCALA" value="true"/>
    </context>
  </template>
</templateSet>
