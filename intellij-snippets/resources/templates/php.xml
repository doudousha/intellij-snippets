<templateSet group="php">
  <template description="" name="p-&lt;?" toReformat="true" toShortenFQNames="true" value="    &lt;?php&#10;&#10;    $END$&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-dst" toReformat="true" toShortenFQNames="true" value="    declare(strict_types=$var1$);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;1&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ec" toReformat="true" toShortenFQNames="true" value="    echo $END$;&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-&lt;?e" toReformat="true" toShortenFQNames="true" value="    &lt;?php echo $END$ ?&gt;&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-&lt;?=" toReformat="true" toShortenFQNames="true" value="    &lt;?=$END$?&gt;&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-?=" toReformat="true" toShortenFQNames="true" value="    &lt;?= $END$ ?&gt;&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-?" toReformat="true" toShortenFQNames="true" value="    &lt;?php $END$ ?&gt;&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-?f" toReformat="true" toShortenFQNames="true" value="    &lt;?php foreach ($$var1$ as $$var2$): ?&gt;&#10;        $END$&#10;    &lt;?php endforeach ?&gt;&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;vars&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;$var&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-?i" toReformat="true" toShortenFQNames="true" value="    &lt;?php if ($$var1$): ?&gt;&#10;        $END$&#10;    &lt;?php endif ?&gt;&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;var&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ns" toReformat="true" toShortenFQNames="true" value="    namespace $var1$;&#10;    $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;Foo\Bar\Baz&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-t." toReformat="true" toShortenFQNames="true" value="    $this-&gt;&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-f" toReformat="true" toShortenFQNames="true" value="    function $var1$($var3$)&#10;    {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var3"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-m" toReformat="true" toShortenFQNames="true" value="    $var1$ function $var2$()&#10;    {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;protected&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;foo&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-gm" toReformat="true" toShortenFQNames="true" value="    /**&#10;     * Gets the value of $var1$&#10;     *&#10;     * @return $var2$&#10;     */&#10;    $var3$ function get$var4$()&#10;    {&#10;        return $this-&gt;$var5$;&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;foo&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;string&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;public&quot;" expression="" name="var3"/>
    <variable alwaysStopAt="true" defaultValue="&quot;$1&quot;" expression="" name="var4"/>
    <variable alwaysStopAt="true" defaultValue="&quot;$1&quot;" expression="" name="var5"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-$s" toReformat="true" toShortenFQNames="true" value="    $var1$-&gt;set$var2$($END$);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;$foo&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;Bar&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-$g" toReformat="true" toShortenFQNames="true" value="    $var1$-&gt;get$var0$();&#10;$END$">
    <variable alwaysStopAt="true" defaultValue="&quot;$foo&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;Bar&quot;" expression="" name="var0"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-=?:" toReformat="true" toShortenFQNames="true" value="    $$var1$ = $var2$ ? $var3$ : $END$;&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;foo&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;true&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;a&quot;" expression="" name="var3"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-?:" toReformat="true" toShortenFQNames="true" value="    $var1$ ? $var2$ : $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;true&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;a&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-t" toReformat="true" toShortenFQNames="true" value="    $$var1$ = ($var2$) ? $var3$ : $var4$;&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;retVal&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;condition&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;a&quot;" expression="" name="var3"/>
    <variable alwaysStopAt="true" defaultValue="&quot;b&quot;" expression="" name="var4"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-C" toReformat="true" toShortenFQNames="true" value="    $_COOKIE['$var1$']&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-E" toReformat="true" toShortenFQNames="true" value="    $_ENV['$var1$']&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-F" toReformat="true" toShortenFQNames="true" value="    $_FILES['$var1$']&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-G" toReformat="true" toShortenFQNames="true" value="    $_GET['$var1$']&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-P" toReformat="true" toShortenFQNames="true" value="    $_POST['$var1$']&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-R" toReformat="true" toShortenFQNames="true" value="    $_REQUEST['$var1$']&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-S" toReformat="true" toShortenFQNames="true" value="    $_SERVER['$var1$']&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-SS" toReformat="true" toShortenFQNames="true" value="    $_SESSION['$var1$']&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-get" toReformat="true" toShortenFQNames="true" value="    $_GET['$var1$']&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-post" toReformat="true" toShortenFQNames="true" value="    $_POST['$var1$']&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-session" toReformat="true" toShortenFQNames="true" value="    $_SESSION['$var1$']&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-inc" toReformat="true" toShortenFQNames="true" value="    include '$var1$';&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;file&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-inc1" toReformat="true" toShortenFQNames="true" value="    include_once '$var1$';&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;file&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-req" toReformat="true" toShortenFQNames="true" value="    require '$var1$';&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;file&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-req1" toReformat="true" toShortenFQNames="true" value="    require_once '$var1$';&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;file&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-/*" toReformat="true" toShortenFQNames="true" value="    /**&#10;     * $END$&#10;     */&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-doc_vp" toReformat="true" toShortenFQNames="true" value="    /**&#10;     * $var1$&#10;     *&#10;     * @var $var2$&#10;     */&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;undocumented class variable&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;string&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-doc_v" toReformat="true" toShortenFQNames="true" value="    /**&#10;     * $var3$&#10;     *&#10;     * @var $var4$&#10;     */&#10;    $var1$ $$var2$;&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;var&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;undocumented class variable&quot;" expression="" name="var3"/>
    <variable alwaysStopAt="true" defaultValue="&quot;string&quot;" expression="" name="var4"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-doc_dp" toReformat="true" toShortenFQNames="true" value="    /**&#10;     * $var1$&#10;     */&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;undocumented constant&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-doc_d" toReformat="true" toShortenFQNames="true" value="    /**&#10;     * $var3$&#10;     */&#10;    define($var1$, $var2$);&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;undocumented constant&quot;" expression="" name="var3"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-inheritdoc" toReformat="true" toShortenFQNames="true" value="    /**&#10;     * {@inheritdoc}&#10;     */&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-def" toReformat="true" toShortenFQNames="true" value="    define('$var1$', $var2$);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;VARIABLE_NAME&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;'definition'&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-def?" toReformat="true" toShortenFQNames="true" value="    $var1$defined('$var2$')&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-wh" toReformat="true" toShortenFQNames="true" value="    while ($var1$) {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;/* condition */&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-do" toReformat="true" toShortenFQNames="true" value="    do {&#10;        $END$&#10;    } while ($var1$);&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-if" toReformat="true" toShortenFQNames="true" value="    if ($var1$) {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ifn" toReformat="true" toShortenFQNames="true" value="    if (!$var1$) {&#10;        $var2$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ifil" toReformat="true" toShortenFQNames="true" value="    &lt;?php if ($var1$): ?&gt;&#10;        $END$&#10;    &lt;?php endif; ?&gt;&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ife" toReformat="true" toShortenFQNames="true" value="    if ($var1$) {&#10;        $var2$&#10;    } else {&#10;        $var3$&#10;    }&#10;    $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var3"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ifeil" toReformat="true" toShortenFQNames="true" value="    &lt;?php if ($var1$): ?&gt;&#10;        $var2$&#10;    &lt;?php else: ?&gt;&#10;        $var3$&#10;    &lt;?php endif; ?&gt;&#10;    $END$&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var3"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-el" toReformat="true" toShortenFQNames="true" value="    else {&#10;        $END$&#10;    }&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-eif" toReformat="true" toShortenFQNames="true" value="    elseif ($var1$) {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-switch" toReformat="true" toShortenFQNames="true" value="    switch ($$var1$) {&#10;        case '$var2$':&#10;            $var3$&#10;            break;&#10;        $END$&#10;        default:&#10;            $var4$&#10;            break;&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;value&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var3"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var4"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-case" toReformat="true" toShortenFQNames="true" value="    case '$var1$':&#10;        $var2$&#10;        break;&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;value&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-for" toReformat="true" toShortenFQNames="true" value="    for ($$var2$ = 0; $$var2$ &lt; $var1$; $$var2$$var3$) {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;count&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;i&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;++&quot;" expression="" name="var3"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-foreach" toReformat="true" toShortenFQNames="true" value="    foreach ($$var1$ as $$var2$) {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;value&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-foreachil" toReformat="true" toShortenFQNames="true" value="    &lt;?php foreach ($$var1$ as $$var2$): ?&gt;&#10;        $END$&#10;    &lt;?php endforeach; ?&gt;&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;value&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-foreachk" toReformat="true" toShortenFQNames="true" value="    foreach ($$var1$ as $$var2$ =&gt; $$var3$) {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;key&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;value&quot;" expression="" name="var3"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-foreachkil" toReformat="true" toShortenFQNames="true" value="    &lt;?php foreach ($$var1$ as $$var2$ =&gt; $$var3$): ?&gt;&#10;        $var0$&#10;    &lt;?php endforeach; ?&gt;&#10;$END$">
    <variable alwaysStopAt="true" defaultValue="&quot;variable&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;key&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;value&quot;" expression="" name="var3"/>
    <variable alwaysStopAt="true" defaultValue="&quot;&lt;!-- html... --&gt;&quot;" expression="" name="var0"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-array" toReformat="true" toShortenFQNames="true" value="    $$var1$ = ['$var2$' =&gt; $var3$];&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;arrayName&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var3"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-try" toReformat="true" toShortenFQNames="true" value="    try {&#10;        $END$&#10;    } catch ($var1$ $e) {&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;Exception&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-lambda" toReformat="true" toShortenFQNames="true" value="    $var1$function ($var2$) use ($var3$) {&#10;        $END$&#10;    };&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;static &quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;args&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;&amp;$x, $y /*put vars in scope (closure) */&quot;" expression="" name="var3"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-pd" toReformat="true" toShortenFQNames="true" value="    echo '&lt;pre&gt;'; var_dump($END$); echo '&lt;/pre&gt;';&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-pdd" toReformat="true" toShortenFQNames="true" value="    echo '&lt;pre&gt;'; var_dump($var1$); echo '&lt;/pre&gt;'; die($END$);&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-vd" toReformat="true" toShortenFQNames="true" value="    var_dump($END$);&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-vdd" toReformat="true" toShortenFQNames="true" value="    var_dump($var1$); die($END$);&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-pr" toReformat="true" toShortenFQNames="true" value="    print_r($END$);&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-prs" toReformat="true" toShortenFQNames="true" value="    print_r($END$, 1);&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-vdf" toReformat="true" toShortenFQNames="true" value="    error_log(print_r($$var1$, true), 3, '$var2$');&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;foo&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;/tmp/debug.log&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-http_redirect" toReformat="true" toShortenFQNames="true" value="    header (&quot;HTTP/1.1 301 Moved Permanently&quot;);&#10;    header (&quot;Location: &quot;.URL);&#10;    exit();&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-log" toReformat="true" toShortenFQNames="true" value="    error_log(var_export($var1$, true));&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-var" toReformat="true" toShortenFQNames="true" value="    var_export($var1$);&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ve" toReformat="true" toShortenFQNames="true" value="    echo '&lt;pre&gt;' . var_export($var1$, 1) . '&lt;/pre&gt;';&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-pc" toReformat="true" toShortenFQNames="true" value="    var_export($var1$);$var0$&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ags" toReformat="true" toShortenFQNames="true" value="    /**&#10;     * $var1$&#10;     *&#10;     * @$END$&#10;     */&#10;    $var2$ $$var3$;&#10;&#10;    public function get$var4$()&#10;    {&#10;        return $this-&gt;$var3$;&#10;    }&#10;&#10;    public function set$var4$($var5$$$var6$)&#10;    {&#10;        $this-&gt;$var3$ = $$var6$;&#10;        return $this;&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;description&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;protected&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;foo&quot;" expression="" name="var3"/>
    <variable alwaysStopAt="true" defaultValue="&quot;$3&quot;" expression="" name="var4"/>
    <variable alwaysStopAt="true" defaultValue="&quot;$4 &quot;" expression="" name="var5"/>
    <variable alwaysStopAt="true" defaultValue="&quot;$3&quot;" expression="" name="var6"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-rett" toReformat="true" toShortenFQNames="true" value="    return true;&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-retf" toReformat="true" toShortenFQNames="true" value="    return false;&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-am" toReformat="true" toShortenFQNames="true" value="    $$var1$ = array_map(function($$var2$) {&#10;        $END$&#10;        return $$var2$;&#10;    }, $$var1$);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;foo&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;v&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-aw" toReformat="true" toShortenFQNames="true" value="    array_walk($$var1$, function(&amp;$$var2$, $$var3$) {&#10;        $$var2$ = $END$;&#10;    });&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;foo&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;v&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;k&quot;" expression="" name="var3"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-static_var" toReformat="true" toShortenFQNames="true" value="    static $$var1$ = null;&#10;    if (is_null($$var1$)){&#10;        $$var1$ = $var2$;&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-CSVWriter" toReformat="true" toShortenFQNames="true" value="    &lt;?php&#10;    &#10;    class CSVWriter {&#10;        public function __construct($file_or_handle, $sep = &quot;\t&quot;, $quot = '&quot;'){&#10;            $args = func_get_args();&#10;            $mode = isset($opts['mode']) ? $opts['mode'] : 'w';&#10;    &#10;            $this-&gt;f =&#10;                is_string($file_or_handle)&#10;                ? fopen($file_or_handle, $mode)&#10;                : $file_or_handle;&#10;    &#10;            $this-&gt;fputcsv_args = [$this-&gt;f, null, $sep, $quot];&#10;    &#10;            if (!$this-&gt;f) throw new Exception('bad file descriptor');&#10;        }&#10;    &#10;        public function write($row){&#10;            $this-&gt;fputcsv_args[1] =&amp; $row;&#10;            call_user_func_array('fputcsv', $this-&gt;fputcsv_args);&#10;        }&#10;    &#10;        public function close(){&#10;            if (!is_null($this-&gt;f))&#10;                fclose($this-&gt;f);&#10;            $this-&gt;f = null;&#10;        }&#10;    &#10;        public function __destruct(){&#10;            $this-&gt;close();&#10;        }&#10;    &#10;    }&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-CSVIterator" toReformat="true" toShortenFQNames="true" value="    &#10;    // http://snipplr.com/view.php?codeview&amp;id=1986 // modified&#10;    class CSVIterator implements Iterator&#10;    {    &#10;        private $f;&#10;        private $curr;&#10;        private $rowCounter;&#10;    &#10;         /* opts keys:&#10;            * row_size&#10;            * escape&#10;            * enclosure&#10;            * delimiter&#10;            */&#10;        public function __construct( $file_or_handle, $opts = [4096, ','] )&#10;        {&#10;            $d = function($n) use(&amp;$opts){ return isset($opts[$n]) ? $opts[$n] : false; };&#10;    &#10;            $this-&gt;combine = $d('combine');&#10;            $this-&gt;headers = $d('headers');&#10;            $this-&gt;headerCheckFunction = $d('header_check_function');&#10;    &#10;            $this-&gt;f =&#10;                is_string($file_or_handle)&#10;                ? fopen( $file_or_handle, 'r' )&#10;                : $file_or_handle;&#10;            if (!$this-&gt;f) throw new Exception('bad file descriptor');&#10;            $this-&gt;fgetcsv_args = [&#10;                    $this-&gt;f,&#10;                    isset($opts['row_size']) ? $opts['row_size'] : 4096,&#10;                    isset($opts['delimiter']) ? $opts['delimiter'] : ',',&#10;                    isset($opts['enclosure']) ? $opts['enclosure'] : '&quot;',&#10;                    isset($opts['escape']) ? $opts['escape'] : '\\',&#10;            ];&#10;            $this-&gt;start();&#10;        }&#10;    &#10;        protected function readRow(){&#10;            $this-&gt;curr = call_user_func_array('fgetcsv', $this-&gt;fgetcsv_args );&#10;            $this-&gt;rowCounter++;&#10;            if ($this-&gt;rowCounter == 1){&#10;                $this-&gt;processHeader();&#10;            } elseif ($this-&gt;curr) {&#10;                $this-&gt;processRow();&#10;            }&#10;        }&#10;    &#10;        public function processHeader(){&#10;            if ($this-&gt;headers || $this-&gt;combine){&#10;                $this-&gt;header = $this-&gt;curr;&#10;                if ($this-&gt;headerCheckFunction){&#10;                    $f = $this-&gt;headerCheckFunction;&#10;                    $f($this-&gt;header);&#10;                }&#10;                $this-&gt;readRow();&#10;            }&#10;        }&#10;    &#10;        public function processRow(){&#10;            if ($this-&gt;combine)&#10;                $this-&gt;curr = array_combine($this-&gt;header, $this-&gt;curr);&#10;        }&#10;    &#10;        public function start(){&#10;            $this-&gt;rowCounter = 0;&#10;            rewind( $this-&gt;f );&#10;            $this-&gt;readRow();&#10;        }&#10;    &#10;        public function rewind()&#10;        {&#10;            $this-&gt;start();&#10;        }&#10;    &#10;        public function current()&#10;        {&#10;            $curr = $this-&gt;curr;&#10;            $this-&gt;readRow();&#10;            return $curr;&#10;        }&#10;    &#10;        public function key()&#10;        {&#10;            return $this-&gt;rowCounter;&#10;        }&#10;    &#10;        public function next()&#10;        {&#10;            return $this-&gt;curr;&#10;        }&#10;    &#10;        public function valid(){&#10;            if( !$this-&gt;next() )&#10;            {&#10;                fclose( $this-&gt;f );&#10;                return FALSE;&#10;            }&#10;            return TRUE;&#10;        }&#10;    &#10;    } // end class&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ase" toReformat="true" toShortenFQNames="true" value="    $this-&gt;assertEquals($var1$, $var2$);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;expected&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;actual&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-asne" toReformat="true" toShortenFQNames="true" value="    $this-&gt;assertNotEquals($var1$, $var2$);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;expected&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;actual&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-asf" toReformat="true" toShortenFQNames="true" value="    $this-&gt;assertFalse($var1$);&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ast" toReformat="true" toShortenFQNames="true" value="    $this-&gt;assertTrue($var1$);&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-asfex" toReformat="true" toShortenFQNames="true" value="    $this-&gt;assertFileExists($var1$);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;'path/to/file'&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-asfnex" toReformat="true" toShortenFQNames="true" value="    $this-&gt;assertFileNotExists($var1$);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;'path/to/file'&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ascon" toReformat="true" toShortenFQNames="true" value="    $this-&gt;assertContains($var1$, $var2$);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;$needle&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;$haystack&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ashk" toReformat="true" toShortenFQNames="true" value="    $this-&gt;assertArrayHasKey($var1$, $var2$);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;$key&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;$array&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-asnhk" toReformat="true" toShortenFQNames="true" value="    this-&gt;assertArrayNotHasKey($var1$, $var2$);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;$key&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;$array&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ascha" toReformat="true" toShortenFQNames="true" value="    $this-&gt;assertClassHasAttribute($var1$, '$var2$');&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;$attributeName&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;$className&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-asi" toReformat="true" toShortenFQNames="true" value="    $this-&gt;assertInstanceOf($var1$, $var2$);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;expected&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;actual&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-test" toReformat="true" toShortenFQNames="true" value="    public function test$var1$()&#10;    {&#10;        $END$&#10;    }&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-setup" toReformat="true" toShortenFQNames="true" value="    protected function setUp()&#10;    {&#10;        $END$&#10;    }&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-teardown" toReformat="true" toShortenFQNames="true" value="    protected function tearDown()&#10;    {&#10;        $END$&#10;    }&#10;">
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-exp" toReformat="true" toShortenFQNames="true" value="    expects($this-&gt;$var1$())&#10;        -&gt;method('$var2$')&#10;        -&gt;with($this-&gt;equalTo($var3$)$var4$)&#10;        -&gt;will($this-&gt;returnValue($var5$));&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;once&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var3"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var4"/>
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var5"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-testcmt" toReformat="true" toShortenFQNames="true" value="    /**&#10;    * @group $var1$&#10;    */&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-fail" toReformat="true" toShortenFQNames="true" value="    $this-&gt;fail($var1$);&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-marki" toReformat="true" toShortenFQNames="true" value="    $this-&gt;markTestIncomplete($var1$);&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-marks" toReformat="true" toShortenFQNames="true" value="    $this-&gt;markTestSkipped($var1$);&#10;">
    <variable alwaysStopAt="true" defaultValue="" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-te" toReformat="true" toShortenFQNames="true" value="    throw new $var1$(&quot;$var2$&quot;);&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;Exception&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;Error Processing Request&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-fpc" toReformat="true" toShortenFQNames="true" value="    file_put_contents($var1$, $var2$$var3$);$var0$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;file&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;content&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;, FILE_APPEND&quot;" expression="" name="var3"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-sr" toReformat="true" toShortenFQNames="true" value="    str_replace($var1$, $var2$, $var3$)$var0$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;search&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;replace&quot;" expression="" name="var2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;subject&quot;" expression="" name="var3"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-ia" toReformat="true" toShortenFQNames="true" value="    in_array($var1$, $var2$)$var0$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;needle&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;haystack&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-is" toReformat="true" toShortenFQNames="true" value="    isset($var1$)$var0$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;var&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-isa" toReformat="true" toShortenFQNames="true" value="    isset($$var1$[$var2$])$var0$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;array&quot;" expression="" name="var1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;key&quot;" expression="" name="var2"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-in" toReformat="true" toShortenFQNames="true" value="    is_null($$var1$)$var0$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;var&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
  <template description="" name="p-fe" toReformat="true" toShortenFQNames="true" value="    file_exists($var1$)$var0$&#10;">
    <variable alwaysStopAt="true" defaultValue="&quot;file&quot;" expression="" name="var1"/>
    <context>
      <option name="PHP" value="true"/>
      <option name="HTML" value="true"/>
    </context>
  </template>
</templateSet>
