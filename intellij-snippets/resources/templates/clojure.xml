<templateSet group="clojure">
  <template description="" name="comm" toReformat="true" toShortenFQNames="true" value="(comment$END$)">
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="condp" toReformat="true" toShortenFQNames="true" value="(condp $1$ $2$$END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;pred&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;expr&quot;" expression="" name="2"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="def" toReformat="true" toShortenFQNames="true" value="(def $END$)">
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="defm" toReformat="true" toShortenFQNames="true" value="(defmethod $1$ &quot;$2$&quot; $3$ [$4$]$END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;multifn&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;doc-string&quot;" expression="" name="2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;dispatch-val&quot;" expression="" name="3"/>
    <variable alwaysStopAt="true" defaultValue="&quot;args&quot;" expression="" name="4"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="defmm" toReformat="true" toShortenFQNames="true" value="(defmulti $1$ &quot;$2$&quot; $END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;doc-string&quot;" expression="" name="2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;dispatch-fn&quot;" expression="" name="0"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="defma" toReformat="true" toShortenFQNames="true" value="(defmacro $1$ &quot;$2$&quot; $END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;doc-string&quot;" expression="" name="2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;dispatch-fn&quot;" expression="" name="0"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="defn" toReformat="true" toShortenFQNames="true" value="(defn $1$ &quot;$2$&quot; [$3$]$END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;doc-string&quot;" expression="" name="2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;arg-list&quot;" expression="" name="3"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="defp" toReformat="true" toShortenFQNames="true" value="(defprotocol $1$$END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="1"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="defr" toReformat="true" toShortenFQNames="true" value="(defrecord $1$ [$2$]$3$$END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;fields&quot;" expression="" name="2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;protocol&quot;" expression="" name="3"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="deft" toReformat="true" toShortenFQNames="true" value="(deftest $1$(is (= $END$)))">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;assertion&quot;" expression="" name="0"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="is" toReformat="true" toShortenFQNames="true" value="(is (= $1$ $END$))">
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="defty" toReformat="true" toShortenFQNames="true" value="(deftype $1$ [$2$]$3$$END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;Name&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;fields&quot;" expression="" name="2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;Protocol&quot;" expression="" name="3"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="doseq" toReformat="true" toShortenFQNames="true" value="(doseq [$1$ $2$]$END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;elem&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;coll&quot;" expression="" name="2"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="fn" toReformat="true" toShortenFQNames="true" value="(fn [$1$] $END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;arg-list&quot;" expression="" name="1"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="if" toReformat="true" toShortenFQNames="true" value="(if $1$$2$$END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;test-expr&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;then-expr&quot;" expression="" name="2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;else-expr&quot;" expression="" name="0"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="if-let" toReformat="true" toShortenFQNames="true" value="(if-let [$1$ $2$]($3$ $1)($END$))">
    <variable alwaysStopAt="true" defaultValue="&quot;result&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;test-expr&quot;" expression="" name="2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;then-expr&quot;" expression="" name="3"/>
    <variable alwaysStopAt="true" defaultValue="&quot;else-expr&quot;" expression="" name="0"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="imp" toReformat="true" toShortenFQNames="true" value="(:import [$1$])&amp; {:keys [$1$] :or {$END$}}">
    <variable alwaysStopAt="true" defaultValue="&quot;package&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;keys&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;defaults&quot;" expression="" name="0"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="let" toReformat="true" toShortenFQNames="true" value="(let [$1$ $2$]$END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;expr&quot;" expression="" name="2"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="letfn" toReformat="true" toShortenFQNames="true" value="(letfn [($1$) [$2$]$END$)])">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;args&quot;" expression="" name="2"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="map" toReformat="true" toShortenFQNames="true" value="(map $1$ $END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;func&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;coll&quot;" expression="" name="0"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="mapl" toReformat="true" toShortenFQNames="true" value="(map #($1$) $END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;lambda&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;coll&quot;" expression="" name="0"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="met" toReformat="true" toShortenFQNames="true" value="($1$ [$2$ $3$]$END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;this&quot;" expression="" name="2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;args&quot;" expression="" name="3"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="ns" toReformat="true" toShortenFQNames="true" value="(ns $END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="0"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="dotimes" toReformat="true" toShortenFQNames="true" value="(dotimes [_ 10](time(dotimes [_ $1$]$END$)))">
    <variable alwaysStopAt="true" defaultValue="&quot;times&quot;" expression="" name="1"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="pmethod" toReformat="true" toShortenFQNames="true" value="($1$ [$2$ $END$])">
    <variable alwaysStopAt="true" defaultValue="&quot;name&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;this&quot;" expression="" name="2"/>
    <variable alwaysStopAt="true" defaultValue="&quot;args&quot;" expression="" name="0"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="refer" toReformat="true" toShortenFQNames="true" value="(:refer-clojure :exclude [$END$])">
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="require" toReformat="true" toShortenFQNames="true" value="(:require [$1$ :as [$END$]])">
    <variable alwaysStopAt="true" defaultValue="&quot;namespace&quot;" expression="" name="1"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="use" toReformat="true" toShortenFQNames="true" value="(:use [$1$ :only [$END$]])">
    <variable alwaysStopAt="true" defaultValue="&quot;namespace&quot;" expression="" name="1"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="print" toReformat="true" toShortenFQNames="true" value="(println $END$)">
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="reduce" toReformat="true" toShortenFQNames="true" value="(reduce $1$)} $2$)">
    <variable alwaysStopAt="true" defaultValue="&quot;(fn [p n] ${3&quot;" expression="" name="1"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
  <template description="" name="when" toReformat="true" toShortenFQNames="true" value="(when $1$ $END$)">
    <variable alwaysStopAt="true" defaultValue="&quot;test&quot;" expression="" name="1"/>
    <variable alwaysStopAt="true" defaultValue="&quot;body&quot;" expression="" name="0"/>
    <context>
      <option name="CLOJURE" value="true"/>
    </context>
  </template>
</templateSet>
